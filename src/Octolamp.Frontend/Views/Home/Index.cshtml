@model IndexViewModel
@{
  ViewData["Title"] = "Summary";
}
    <div class="ui grid">   
        <div class="six wide column">
            <h2 class="ui header">
                <img src="https://www.osborneclarke.com/wp-content/uploads/2020/03/covid-website-icon-1.png" />
                <div class="content">
                    Global Summary
                    <div class="sub header">Summary of all the countries</div>
                </div>
            </h2>
            <div class="ui vertical menu" id="menuContainer" style="width:100%;">
                <div class="ui active inline loader"></div>
            </div>
        </div>
        <div class="ten wide column">
            <table class="ui compact table">
                <thead>
                    <tr>
                        <th>Country</th>
                        <th>New Confirmed</th>
                        <th>Total Confirmed</th>
                        <th>New Deaths</th>
                        <th>Total Deathes</th>
                        <th>New Recovered</th>
                        <th>Total Recovered</th>
                    </tr>
                </thead>
                <tbody id="countryBody">
                    <div class="ui active inline loader"></div>
                </tbody>
            </table>
        </div>
    </div>

<script>
    function highlightFor(id, color, seconds) {
        var element = document.getElementById(id)
        var origcolor = element.style.backgroundColor
        element.style.backgroundColor = color;
        var t = setTimeout(function () {
            element.style.backgroundColor = origcolor;
        }, (seconds * 1000));
    }

    var globalUpdateFunc = function () {
        fetch('/Home/GetGlobal')
            .then(response => response.json())
            .then(data => {

                var htmls = [];
                htmls.push('<a class="item">New Confirmed<div class="ui label yellow">' + data.newConfirmed + '</div></a>');
                htmls.push('<a class="item">Total Confirmed<div class="ui label orange">' + data.totalConfirmed + '</div></a>');
                htmls.push('<a class="item">New Deaths<div class="ui label brown">' + data.newDeaths + '</div></a>');
                htmls.push('<a class="item">Total Deaths<div class="ui label red">' + data.totalDeaths + '</div></a>');
                htmls.push('<a class="item">New Recovered<div class="ui label green">' + data.newRecovered + '</div></a>');
                htmls.push('<a class="item">Total Recovered<div class="ui label teal">' + data.totalRecovered + '</div></a>');


                $('#menuContainer').html(htmls.join(' '));

                if (window.globalUpdate) {
                    if (window.globalUpdate.date.nanos !== data.date.nanos) {
                        highlightFor('menuContainer', 'orange', 1);
                    }
                }
                window.globalUpdate = data;
            });
    };

    var countryUpdateFunc = function () {
        fetch('/Home/GetAllCountry')
            .then(response => response.json())
            .then(data => {
                var htmls = [];
                data.forEach(row => {
                    htmls.push('<tr id="' + row.slug + '">');
                    htmls.push('<td>' + row.countryCountry + '</td>');
                    htmls.push('<td class="warning" align="right">' + row.newConfirmed + '</div></a>');
                    htmls.push('<td class="warning" align="right">' + row.totalConfirmed + '</div></a>');
                    htmls.push('<td class="negative" align="right">' + row.newDeaths + '</div></a>');
                    htmls.push('<td class="negative" align="right">' + row.totalDeaths + '</div></a>');
                    htmls.push('<td class="positive" align="right">' + row.newRecovered + '</div></a>');
                    htmls.push('<td class="positive" align="right">' + row.totalRecovered + '</div></a>');
                    htmls.push('</tr>');
                });

                $('#countryBody').html(htmls.join(' '));  

                data.forEach(row => {
                    row.slug = (row.slug + "").replace("-", "");
                    if (window[row.slug]) {
                        var old = window[row.slug];
                        if (old && old.date && old.date.nanos !== row.date.nanos) {
                            highlightFor(row.slug, 'orange', 1);
                        }
                    }
                    window[row.slug] = row;
                });
            });
    }

    $(function () {

        setInterval(() =>
        {
            globalUpdateFunc();

            countryUpdateFunc();
        }, 10000);
    });
</script>