apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-linkerd-demo
  namespace: linkerd-demo-workload
spec:
  replicas: 1
  selector:
    matchLabels:
      run: frontend-linkerd-demo
  strategy: {}
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        run: frontend-linkerd-demo
    spec:
      containers:
      - env:
        - name: Backend__Address
          value: http://backend-linkerd-demo
        - name: Azure__SignalR__ConnectionString
          value: SIGNALRPCINFO
        - name: DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT
          value: "true"
        image: moimhossain/frontend-linkerd-demo:latest
        imagePullPolicy: Always
        imagePullSecrets:
        - name: dockerhub        
        name: frontend-linkerd-demo
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
status: {}
---

apiVersion: v1
kind: Service
metadata:
  name: frontend-linkerd-demo
  namespace: linkerd-demo-workload
spec:
  type: ClusterIP 
  ports:
  - port: 80
  selector:
    run: frontend-linkerd-demo
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: linkerd-demo-workload
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: frontend-linkerd-demo
          servicePort: 80
        path: /(.*)